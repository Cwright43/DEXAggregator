{"ast":null,"code":"var _jsxFileName = \"/home/arcturian/aggregator/src/components/Swap.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { ethers } from 'ethers';\nimport dappIcon from '../dapp-swap.png';\nimport appleIcon from '../apple.jpeg';\nimport Alert from './Alert';\nimport { swap, loadProvider, loadBalances, loadBalances1, loadNetwork, loadAccount, loadTokens, loadAMM, loadApple, loadDapp } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Swap = _ref => {\n  _s();\n\n  let {\n    price1,\n    price2,\n    chainId,\n    dappicon,\n    apple\n  } = _ref;\n  const [inputToken, setInputToken] = useState(null);\n  const [outputToken, setOutputToken] = useState(null);\n  const [inputAmount, setInputAmount] = useState(0);\n  const [outputAmount, setOutputAmount] = useState(0);\n  const [flagDapp, setFlagDapp] = useState(false);\n  const [flagApple, setFlagApple] = useState(false);\n  const [price, setPrice] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [activeAMM, setActiveAMM] = useState(0);\n  const [showAlert, setShowAlert] = useState(false);\n  const provider = useSelector(state => state.provider.connection);\n  const account = useSelector(state => state.provider.account);\n  const tokens = useSelector(state => state.tokens.contracts);\n  const symbols = useSelector(state => state.tokens.symbols);\n  const balances = useSelector(state => state.tokens.balances);\n  const amm = useSelector(state => state.amm.contract);\n  const isSwapping = useSelector(state => state.amm.swapping.isSwapping);\n  const isSuccess = useSelector(state => state.amm.swapping.isSuccess);\n  const transactionHash = useSelector(state => state.amm.swapping.transactionHash);\n  const dispatch = useDispatch();\n\n  const inputHandler = async e => {\n    if (!inputToken || !outputToken) {\n      window.alert('Please select token');\n      return;\n    }\n\n    if (inputToken === outputToken) {\n      window.alert('Invalid token pair');\n      return;\n    }\n\n    if (e.target.value == 0) {\n      setFlagApple(false);\n      setFlagDapp(false);\n      return;\n    }\n\n    if (inputToken === 'DAPP') {\n      setInputAmount(e.target.value);\n\n      const _token1AmountA = ethers.utils.parseUnits(e.target.value, 'ether'); // const result = await amm.calculateToken1Swap(_token1Amount)\n\n\n      const _token1Amount = ethers.utils.formatUnits(_token1AmountA.toString(), 'ether');\n\n      if (price1 > price2) {\n        await loadApple(provider, chainId, dispatch);\n        console.log(\"AppleSwap WINS\");\n        const output = _token1Amount * price1;\n        setOutputAmount(output);\n        setFlagApple(true);\n        setPrice(price1);\n      } else {\n        await loadDapp(provider, chainId, dispatch);\n        const output = _token1Amount * price2;\n        setOutputAmount(output);\n        console.log(\"DappSwap WINS\");\n        setPrice(price2);\n        setFlagDapp(true);\n      }\n    } else {\n      setInputAmount(e.target.value);\n\n      const _token1AmountA = ethers.utils.parseUnits(e.target.value, 'ether'); // const result = await amm.calculateToken1Swap(_token1Amount)\n\n\n      const _token1Amount = ethers.utils.formatUnits(_token1AmountA.toString(), 'ether'); // setOutputAmount(_token1Amount.toString())\n\n\n      if (price2 > price1) {\n        await loadApple(provider, chainId, dispatch);\n        console.log(\"AppleSwap WINS\");\n        const output = _token1Amount * (1 / price1);\n        setOutputAmount(output);\n        setPrice(1 / price1);\n        setFlagApple(true);\n      } else {\n        await loadDapp(provider, chainId, dispatch);\n        const output = _token1Amount * (1 / price2);\n        setOutputAmount(output);\n        console.log(\"DappSwap WINS\");\n        setPrice(1 / price2);\n        setFlagDapp(true);\n      }\n    }\n  };\n\n  const swapHandler = async e => {\n    e.preventDefault();\n    setShowAlert(false);\n\n    if (inputToken === outputToken) {\n      window.alert('Invalid Token Pair');\n      return;\n    }\n\n    const _inputAmount = ethers.utils.parseUnits(inputAmount, 'ether'); // Swap token depending upon which one we're doing...\n\n\n    if (inputToken === \"DAPP\") {\n      await swap(provider, amm, tokens[0], inputToken, _inputAmount, dispatch);\n    } else {\n      await swap(provider, amm, tokens[1], inputToken, _inputAmount, dispatch);\n    }\n\n    await loadBalances(amm, tokens, account, dispatch);\n    await getPrice();\n    setShowAlert(true);\n  };\n\n  const getPrice = async () => {\n    if (inputToken === outputToken) {\n      setPrice(0);\n      return;\n    }\n\n    if (inputToken === 'DAPP') {\n      setPrice((await amm.token2Balance()) / (await amm.token1Balance()));\n    } else {\n      setPrice((await amm.token1Balance()) / (await amm.token2Balance()));\n    }\n  };\n\n  useEffect(() => {\n    if (inputToken && outputToken) {\n      getPrice();\n    }\n  }, [inputToken, outputToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [flagDapp && /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"d-flex justify-content-center align-items-center text-warning my-3 body rounded-5\",\n      style: {\n        width: '450px',\n        height: '60px',\n        backgroundColor: 'blue',\n        textAlign: 'center'\n      },\n      children: [\"Routing: DappSwap\", /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"dappswap\",\n        src: dappIcon,\n        width: \"40\",\n        height: \"40\",\n        className: \"align-center mx-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), flagApple && /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"d-flex justify-content-center align-items-center text-warning my-3 body rounded-5\",\n      style: {\n        width: '450px',\n        height: '60px',\n        backgroundColor: 'blue',\n        textAlign: 'center'\n      },\n      children: [\"Routing: Appleswap\", /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"appleswap\",\n        src: appleIcon,\n        width: \"40\",\n        height: \"40\",\n        className: \"text-center mx-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: '450px'\n      },\n      className: \"mx-auto px-4\",\n      children: account ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: swapHandler,\n        style: {\n          maxWidth: '450px',\n          margin: '50px auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Input: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              muted: true,\n              children: [\"Balance: \", inputToken === symbols[0] ? parseFloat(balances[0]).toFixed(2) : inputToken === symbols[1] ? parseFloat(balances[1]).toFixed(2) : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"0.0\",\n              min: \"0.0\",\n              step: \"any\",\n              onChange: e => inputHandler(e),\n              disabled: !inputToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              variant: \"outline-secondary\",\n              title: inputToken ? inputToken : \"Select Token\",\n              children: [\"// ChainId truthy condition statement\", /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setInputToken(e.target.innerHTML),\n                children: \"DAPP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setInputToken(e.target.innerHTML),\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              muted: true,\n              children: [\"Balance: \", outputToken === symbols[0] ? parseFloat(balances[0]).toFixed(2) : outputToken === symbols[1] ? parseFloat(balances[1]).toFixed(2) : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"0.0\",\n              value: outputAmount === 0 ? \"\" : outputAmount,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              variant: \"outline-secondary\",\n              title: outputToken ? outputToken : \"Select Token\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setOutputToken(e.target.innerHTML),\n                children: \"DAPP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setOutputToken(e.target.innerHTML),\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3\",\n          children: [isSwapping ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              display: 'block',\n              margin: '0 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Swap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            muted: true,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Exchange Rate: \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        style: {\n          height: '300px'\n        },\n        children: \"Please connect wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), isSwapping ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Pending...',\n      transactionHash: null,\n      variant: 'info',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this) : isSuccess && showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Successful',\n      transactionHash: transactionHash,\n      variant: 'success',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this) : !isSuccess && showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Failed',\n      transactionHash: null,\n      variant: 'danger',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Swap, \"VbgB6gKhUAjbv2zPeV0Ra3jOeVQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Swap;\nexport default Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","Container","Card","Form","InputGroup","Dropdown","DropdownButton","Button","Row","Spinner","Collapse","ethers","dappIcon","appleIcon","Alert","swap","loadProvider","loadBalances","loadBalances1","loadNetwork","loadAccount","loadTokens","loadAMM","loadApple","loadDapp","Swap","price1","price2","chainId","dappicon","apple","inputToken","setInputToken","outputToken","setOutputToken","inputAmount","setInputAmount","outputAmount","setOutputAmount","flagDapp","setFlagDapp","flagApple","setFlagApple","price","setPrice","open","setOpen","activeAMM","setActiveAMM","showAlert","setShowAlert","provider","state","connection","account","tokens","contracts","symbols","balances","amm","contract","isSwapping","swapping","isSuccess","transactionHash","dispatch","inputHandler","e","window","alert","target","value","_token1AmountA","utils","parseUnits","_token1Amount","formatUnits","toString","console","log","output","swapHandler","preventDefault","_inputAmount","getPrice","token2Balance","token1Balance","width","height","backgroundColor","textAlign","maxWidth","margin","parseFloat","toFixed","innerHTML","display"],"sources":["/home/arcturian/aggregator/src/components/Swap.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Container } from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { ethers } from 'ethers'\n\nimport dappIcon from '../dapp-swap.png';\nimport appleIcon from '../apple.jpeg';\n\n\nimport Alert from './Alert'\n\nimport {\n  swap,\n  loadProvider,\n  loadBalances,\n  loadBalances1,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadAMM,\n  loadApple,\n  loadDapp\n} from '../store/interactions'\n\nconst Swap = ({ price1, price2, chainId, dappicon, apple }) => {\n\n  const [inputToken, setInputToken] = useState(null)\n  const [outputToken, setOutputToken] = useState(null)\n  const [inputAmount, setInputAmount] = useState(0)\n  const [outputAmount, setOutputAmount] = useState(0)\n\n  const [flagDapp, setFlagDapp] = useState(false)\n  const [flagApple, setFlagApple] = useState(false)\n\n  const [price, setPrice] = useState(0)\n\n  const [open, setOpen] = useState(false);\n\n  const [activeAMM, setActiveAMM] = useState(0)\n\n  const [showAlert, setShowAlert] = useState(false)\n\n  const provider = useSelector(state => state.provider.connection)\n  const account = useSelector(state => state.provider.account)\n\n  const tokens = useSelector(state => state.tokens.contracts)\n  const symbols = useSelector(state => state.tokens.symbols)\n  const balances = useSelector(state => state.tokens.balances)\n\n  const amm = useSelector(state => state.amm.contract)\n  const isSwapping = useSelector(state => state.amm.swapping.isSwapping)\n  const isSuccess = useSelector(state => state.amm.swapping.isSuccess)\n  const transactionHash = useSelector(state => state.amm.swapping.transactionHash)\n\n  const dispatch = useDispatch()\n\n  const inputHandler = async (e) => {\n    if (!inputToken || !outputToken) {\n      window.alert('Please select token')\n      return\n    }\n\n    if (inputToken === outputToken) {\n      window.alert('Invalid token pair')\n      return\n    }\n\n    if (e.target.value == 0) {\n      setFlagApple(false)\n      setFlagDapp(false)\n      return\n    }\n\n    if (inputToken === 'DAPP') {\n      setInputAmount(e.target.value)\n\n      const _token1AmountA = ethers.utils.parseUnits(e.target.value, 'ether')\n      // const result = await amm.calculateToken1Swap(_token1Amount)\n      const _token1Amount = ethers.utils.formatUnits(_token1AmountA.toString(), 'ether')\n\n      \n\n      if (price1 > price2) {\n        await loadApple(provider, chainId, dispatch)\n        console.log(\"AppleSwap WINS\")\n        const output = _token1Amount * price1\n        setOutputAmount(output)\n        setFlagApple(true)\n        setPrice(price1)\n      } else {\n        await loadDapp(provider, chainId, dispatch)\n        const output = _token1Amount * price2\n        setOutputAmount(output)\n        console.log(\"DappSwap WINS\")\n        setPrice(price2)\n        setFlagDapp(true)\n      }\n\n    \n\n    } else {\n      setInputAmount(e.target.value)\n\n      const _token1AmountA = ethers.utils.parseUnits(e.target.value, 'ether')\n      // const result = await amm.calculateToken1Swap(_token1Amount)\n      const _token1Amount = ethers.utils.formatUnits(_token1AmountA.toString(), 'ether')\n\n     // setOutputAmount(_token1Amount.toString())\n    \n      if (price2 > price1) {\n        await loadApple(provider, chainId, dispatch)\n        console.log(\"AppleSwap WINS\")\n        const output = _token1Amount * (1 / price1)\n        setOutputAmount(output)\n        setPrice(1 / price1)\n        setFlagApple(true)\n      } else {\n        await loadDapp(provider, chainId, dispatch)\n        const output = _token1Amount * (1 / price2)\n        setOutputAmount(output)\n        console.log(\"DappSwap WINS\")\n        setPrice(1 / price2)\n        setFlagDapp(true)\n      }\n\n    }\n\n  }\n\n  const swapHandler = async (e) => {\n    e.preventDefault()\n\n    setShowAlert(false)\n\n    if (inputToken === outputToken) {\n      window.alert('Invalid Token Pair')\n      return\n    }\n\n    const _inputAmount = ethers.utils.parseUnits(inputAmount, 'ether')\n\n    // Swap token depending upon which one we're doing...\n    if (inputToken === \"DAPP\") {\n      await swap(provider, amm, tokens[0], inputToken, _inputAmount, dispatch)\n    } else {\n      await swap(provider, amm, tokens[1], inputToken, _inputAmount, dispatch)\n    }\n\n    await loadBalances(amm, tokens, account, dispatch)\n    await getPrice()\n\n    setShowAlert(true)\n\n  }\n\n  const getPrice = async () => {\n    if (inputToken === outputToken) {\n      setPrice(0)\n      return\n    }\n\n    if (inputToken === 'DAPP') {\n      setPrice(await amm.token2Balance() / await amm.token1Balance())\n    } else {\n      setPrice(await amm.token1Balance() / await amm.token2Balance())\n    }\n  }\n\n  useEffect(() => {\n    if(inputToken && outputToken) {\n      getPrice()\n    }\n  }, [inputToken, outputToken]);\n\n  return (\n    <div>\n      {flagDapp && (\n\n    <h5 className='d-flex justify-content-center align-items-center text-warning my-3 body rounded-5'\n    style={{\n        width: '450px',\n        height: '60px',\n        backgroundColor: 'blue',\n        textAlign: 'center' \n      }}>\n        Routing: DappSwap\n        <img\n        alt=\"dappswap\"\n        src={dappIcon}\n        width=\"40\"\n        height=\"40\"\n        className=\"align-center mx-3\"\n        />\n    </h5>\n\n      )}\n\n      {flagApple && (\n    <h5 className='d-flex justify-content-center align-items-center text-warning my-3 body rounded-5'\n    style={{\n        width: '450px',\n        height: '60px',\n        backgroundColor: 'blue',\n        textAlign: 'center' \n    }}>\n      Routing: Appleswap\n        <img\n        alt=\"appleswap\"\n        src={appleIcon}\n        width=\"40\"\n        height=\"40\"\n        className=\"text-center mx-3\"\n        />\n    </h5>\n\n\n      )}\n      <Card style={{ maxWidth: '450px' }} className='mx-auto px-4'>\n        {account ? (\n          <Form onSubmit={swapHandler} style={{ maxWidth: '450px', margin: '50px auto' }}>\n\n            <Row className='my-3'>\n              <div className='d-flex justify-content-between'>\n                <Form.Label><strong>Input: </strong></Form.Label>\n                <Form.Text muted>\n                  Balance: {\n                    inputToken === symbols[0] ? (\n                      parseFloat(balances[0]).toFixed(2)\n                    ) : inputToken === symbols[1] ? (\n                      parseFloat(balances[1]).toFixed(2)\n                    ) : 0\n                  }\n                </Form.Text>\n              </div>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  min=\"0.0\"\n                  step=\"any\"\n                  onChange={(e) => inputHandler(e) }\n                  disabled={!inputToken}\n                />\n                <DropdownButton\n                  variant=\"outline-secondary\"\n                  title={inputToken ? inputToken : \"Select Token\"}\n                >\n                // ChainId truthy condition statement \n                  <Dropdown.Item onClick={(e) => setInputToken(e.target.innerHTML)} >DAPP</Dropdown.Item>\n                  <Dropdown.Item onClick={(e) => setInputToken(e.target.innerHTML)} >USD</Dropdown.Item>\n                </DropdownButton>\n              </InputGroup>\n            </Row>\n\n            <Row className='my-4'>\n              <div className='d-flex justify-content-between'>\n                <Form.Label><strong>Output:</strong></Form.Label>\n                <Form.Text muted>\n                  Balance: {\n                    outputToken === symbols[0] ? (\n                      parseFloat(balances[0]).toFixed(2)\n                    ) : outputToken === symbols[1] ? (\n                      parseFloat(balances[1]).toFixed(2)\n                    ) : 0\n                  }\n                </Form.Text>\n              </div>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  value={outputAmount === 0 ? \"\" : outputAmount }\n                  disabled\n                />\n                <DropdownButton\n                  variant=\"outline-secondary\"\n                  title={outputToken ? outputToken : \"Select Token\"}\n                >\n                  <Dropdown.Item onClick={(e) => setOutputToken(e.target.innerHTML)}>DAPP</Dropdown.Item>\n                  <Dropdown.Item onClick={(e) => setOutputToken(e.target.innerHTML)}>USD</Dropdown.Item>\n                </DropdownButton>\n              </InputGroup>\n            </Row>\n\n            <Row className='my-3'>\n              {isSwapping ? (\n                <Spinner animation=\"border\" style={{ display: 'block', margin: '0 auto' }} />\n              ): (\n                <Button type='submit'>Swap</Button>\n              )}\n\n              <Form.Text muted>\n                <p>Exchange Rate: {price}</p>\n              </Form.Text>\n            </Row>\n\n          </Form>\n\n        ) : (\n          <p\n            className='d-flex justify-content-center align-items-center'\n            style={{ height: '300px' }}\n          >\n            Please connect wallet.\n          </p>\n        )}\n      </Card>\n\n\n\n      {isSwapping ? (\n        <Alert\n          message={'Swap Pending...'}\n          transactionHash={null}\n          variant={'info'}\n          setShowAlert={setShowAlert}\n        />\n      ) : isSuccess && showAlert ? (\n        <Alert\n          message={'Swap Successful'}\n          transactionHash={transactionHash}\n          variant={'success'}\n          setShowAlert={setShowAlert}\n        />\n      ) : !isSuccess && showAlert ? (\n        <Alert\n          message={'Swap Failed'}\n          transactionHash={null}\n          variant={'danger'}\n          setShowAlert={setShowAlert}\n        />\n      ) : (\n        <></>\n      )}\n\n    </div>\n  );\n}\n\nexport default Swap;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}