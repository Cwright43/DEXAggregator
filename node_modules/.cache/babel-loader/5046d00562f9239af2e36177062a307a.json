{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const amm = createSlice({\n  name: 'amm',\n  initialState: {\n    contract: null,\n    shares: 0,\n    swaps: [],\n    depositing: {\n      isDepositing: false,\n      isSucccess: false,\n      transactionHash: null\n    },\n    withdrawing: {\n      isWithdrawing: false,\n      isSucccess: false,\n      transactionHash: null\n    },\n    swapping: {\n      isSwapping: false,\n      isSucccess: false,\n      transactionHash: null\n    }\n  },\n  reducers: {\n    setContract: (state, action) => {\n      state.contract = action.payload;\n    },\n    sharesLoaded: (state, action) => {\n      state.shares = action.payload;\n    },\n    token1Loaded: (state, action) => {\n      state.token1 = action.payload;\n    },\n    token2Loaded: (state, action) => {\n      state.token2 = action.payload;\n    },\n    token3Loaded: (state, action) => {\n      state.token3 = action.payload;\n    },\n    token4Loaded: (state, action) => {\n      state.token4 = action.payload;\n    },\n    token5Loaded: (state, action) => {\n      state.token5 = action.payload;\n    },\n    token6Loaded: (state, action) => {\n      state.token4 = action.payload;\n    },\n    swapsLoaded: (state, action) => {\n      state.swaps = action.payload;\n    },\n    depositRequest: (state, action) => {\n      state.depositing.isDepositing = true;\n      state.depositing.isSuccess = false;\n      state.depositing.transactionHash = null;\n    },\n    depositSuccess: (state, action) => {\n      state.depositing.isDepositing = false;\n      state.depositing.isSuccess = true;\n      state.depositing.transactionHash = action.payload;\n    },\n    depositFail: (state, action) => {\n      state.depositing.isDepositing = false;\n      state.depositing.isSuccess = false;\n      state.depositing.transactionHash = null;\n    },\n    withdrawRequest: (state, action) => {\n      state.withdrawing.isWithdrawing = true;\n      state.withdrawing.isSuccess = false;\n      state.withdrawing.transactionHash = null;\n    },\n    withdrawSuccess: (state, action) => {\n      state.withdrawing.isWithdrawing = false;\n      state.withdrawing.isSuccess = true;\n      state.withdrawing.transactionHash = action.payload;\n    },\n    withdrawFail: (state, action) => {\n      state.withdrawing.isWithdrawing = false;\n      state.withdrawing.isSuccess = false;\n      state.withdrawing.transactionHash = null;\n    },\n    swapRequest: (state, action) => {\n      state.swapping.isSwapping = true;\n      state.swapping.isSuccess = false;\n      state.swapping.transactionHash = null;\n    },\n    swapSuccess: (state, action) => {\n      state.swapping.isSwapping = false;\n      state.swapping.isSuccess = true;\n      state.swapping.transactionHash = action.payload;\n    },\n    swapFail: (state, action) => {\n      state.swapping.isSwapping = false;\n      state.swapping.isSuccess = false;\n      state.swapping.transactionHash = null;\n    }\n  }\n});\nexport const {\n  setContract,\n  sharesLoaded,\n  token1Loaded,\n  token2Loaded,\n  token3Loaded,\n  token4Loaded,\n  token5Loaded,\n  swapsLoaded,\n  depositRequest,\n  depositSuccess,\n  depositFail,\n  withdrawRequest,\n  withdrawSuccess,\n  withdrawFail,\n  swapRequest,\n  swapSuccess,\n  swapFail\n} = amm.actions;\nexport default amm.reducer;","map":{"version":3,"names":["createSlice","amm","name","initialState","contract","shares","swaps","depositing","isDepositing","isSucccess","transactionHash","withdrawing","isWithdrawing","swapping","isSwapping","reducers","setContract","state","action","payload","sharesLoaded","token1Loaded","token1","token2Loaded","token2","token3Loaded","token3","token4Loaded","token4","token5Loaded","token5","token6Loaded","swapsLoaded","depositRequest","isSuccess","depositSuccess","depositFail","withdrawRequest","withdrawSuccess","withdrawFail","swapRequest","swapSuccess","swapFail","actions","reducer"],"sources":["/home/arcturian/aggregator/src/store/reducers/amm.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const amm = createSlice({\n  name: 'amm',\n  initialState: {\n    contract: null,\n    shares: 0,\n    swaps: [],\n    depositing: {\n      isDepositing: false,\n      isSucccess: false,\n      transactionHash: null\n    },\n    withdrawing: {\n      isWithdrawing: false,\n      isSucccess: false,\n      transactionHash: null\n    },\n    swapping: {\n      isSwapping: false,\n      isSucccess: false,\n      transactionHash: null\n    }\n  },\n  reducers: {\n    setContract: (state, action) => {\n      state.contract = action.payload\n    },\n    sharesLoaded: (state, action) => {\n      state.shares = action.payload\n    },\n\n    token1Loaded: (state, action) => {\n      state.token1 = action.payload\n    },\n\n    token2Loaded: (state, action) => {\n      state.token2 = action.payload\n    },\n\n    token3Loaded: (state, action) => {\n      state.token3 = action.payload\n    },\n\n    token4Loaded: (state, action) => {\n      state.token4 = action.payload\n    },\n\n    token5Loaded: (state, action) => {\n      state.token5 = action.payload\n    },\n\n    token6Loaded: (state, action) => {\n      state.token4 = action.payload\n    },\n\n    swapsLoaded: (state, action) => {\n      state.swaps = action.payload\n    },\n    depositRequest: (state, action) => {\n      state.depositing.isDepositing = true\n      state.depositing.isSuccess = false\n      state.depositing.transactionHash = null\n    },\n    depositSuccess: (state, action) => {\n      state.depositing.isDepositing = false\n      state.depositing.isSuccess = true\n      state.depositing.transactionHash = action.payload\n    },\n    depositFail: (state, action) => {\n      state.depositing.isDepositing = false\n      state.depositing.isSuccess = false\n      state.depositing.transactionHash = null\n    },\n    withdrawRequest: (state, action) => {\n      state.withdrawing.isWithdrawing = true\n      state.withdrawing.isSuccess = false\n      state.withdrawing.transactionHash = null\n    },\n    withdrawSuccess: (state, action) => {\n      state.withdrawing.isWithdrawing = false\n      state.withdrawing.isSuccess = true\n      state.withdrawing.transactionHash = action.payload\n    },\n    withdrawFail: (state, action) => {\n      state.withdrawing.isWithdrawing = false\n      state.withdrawing.isSuccess = false\n      state.withdrawing.transactionHash = null\n    },\n    swapRequest: (state, action) => {\n      state.swapping.isSwapping = true\n      state.swapping.isSuccess = false\n      state.swapping.transactionHash = null\n    },\n    swapSuccess: (state, action) => {\n      state.swapping.isSwapping = false\n      state.swapping.isSuccess = true\n      state.swapping.transactionHash = action.payload\n    },\n    swapFail: (state, action) => {\n      state.swapping.isSwapping = false\n      state.swapping.isSuccess = false\n      state.swapping.transactionHash = null\n    }\n  }\n})\n\nexport const {\n  setContract,\n  sharesLoaded,\n  token1Loaded,\n  token2Loaded,\n  token3Loaded,\n  token4Loaded,\n  token5Loaded,\n  swapsLoaded,\n  depositRequest,\n  depositSuccess,\n  depositFail,\n  withdrawRequest,\n  withdrawSuccess,\n  withdrawFail,\n  swapRequest,\n  swapSuccess,\n  swapFail\n} = amm.actions;\n\nexport default amm.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}