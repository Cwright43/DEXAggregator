{"ast":null,"code":"var _jsxFileName = \"/home/arcturian/aggregator/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { ethers } from 'ethers';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport dappIcon from '../dapp-swap.png';\nimport appleIcon from '../apple.jpeg'; // Components\n\nimport Navigation from './Navigation';\nimport Tabs from './Tabs';\nimport Swap from './Swap';\nimport Deposit from './Deposit';\nimport Withdraw from './Withdraw'; // import Deposit from './Deposit';\n// import Withdraw from './Withdraw';\n\nimport Charts from './Charts'; // ABIs: Import your contract ABIs here\n\nimport AMM_ABI from '../abis/AMM.json';\nimport TOKEN_ABI from '../abis/Token.json'; // Config: Import your network config here\n\nimport config from '../config.json';\nimport { loadProvider, loadBalances, loadBalances1, loadNetwork, loadAccount, loadTokens, loadAMM, loadApple } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dappswap, setDappSwap] = useState(null);\n  const [appleswap, setAppleSwap] = useState(null);\n  const [usd, setUSD] = useState(null);\n  const [dapp, setDapp] = useState(null);\n  const [dappAMM, setDappAMM] = useState(null);\n  const [appleAMM, setAppleAMM] = useState(null);\n  const [usdBalance, setUSDBalance] = useState(0);\n  const [dappBalance, setDappBalance] = useState(0);\n  const [price1, setPrice1] = useState(0);\n  const [usdBalance1, setUSDBalance1] = useState(0);\n  const [dappBalance1, setDappBalance1] = useState(0);\n  const [price2, setPrice2] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const token1 = useSelector(state => state.amm.token1);\n  const token2 = useSelector(state => state.amm.token2);\n  const token3 = useSelector(state => state.amm.token3);\n  const token4 = useSelector(state => state.amm.token4);\n  const token5 = useSelector(state => state.amm.token5); // const tokenA = useSelector(state => state.appleswap.token1)\n\n  const chainId = useSelector(state => state.provider.chainId);\n  const account = useSelector(state => state.provider.account);\n  const tokens = useSelector(state => state.tokens.contracts);\n  const dispatch = useDispatch();\n\n  const loadBlockchainData = async () => {\n    // Initiate provider\n    const provider = await loadProvider(dispatch); // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n\n    const chainId = await loadNetwork(provider, dispatch); // Reload page when network changes\n\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload();\n    }); // Fetch current account from Metamask when changed\n\n    window.ethereum.on('accountsChanged', async () => {\n      await loadAccount(dispatch);\n    }); // Initiate contracts - Redux\n\n    await loadTokens(provider, chainId, dispatch);\n    await loadAMM(provider, chainId, dispatch); // await loadApple(provider, chainId, dispatch)\n    // Initiate contracts - React\n\n    const dappswap = new ethers.Contract(config[31337].dappswap.address, AMM_ABI, provider);\n    setDappSwap(dappswap);\n    const appleswap = new ethers.Contract(config[31337].appleswap.address, AMM_ABI, provider);\n    setAppleSwap(appleswap); // Initiate contracts\n\n    let usd = new ethers.Contract(config[31337].usd.address, TOKEN_ABI, provider);\n    setUSD(usd);\n    let dapp = new ethers.Contract(config[31337].dapp.address, TOKEN_ABI, provider);\n    setDapp(dapp); // Retrieve Balances\n\n    let dappBalance = await dapp.balanceOf(appleswap.address);\n    dappBalance = ethers.utils.formatUnits(dappBalance, 18);\n    setDappBalance(dappBalance);\n    let usdBalance = await usd.balanceOf(appleswap.address);\n    usdBalance = ethers.utils.formatUnits(usdBalance, 18);\n    setUSDBalance(usdBalance);\n    let price1 = usdBalance / dappBalance;\n    setPrice1(price1);\n    let dappBalance1 = await dapp.balanceOf(dappswap.address);\n    dappBalance1 = ethers.utils.formatUnits(dappBalance1, 18);\n    setDappBalance1(dappBalance1);\n    let usdBalance1 = await usd.balanceOf(dappswap.address);\n    usdBalance1 = ethers.utils.formatUnits(usdBalance1, 18);\n    setUSDBalance1(usdBalance1);\n    let price2 = usdBalance1 / dappBalance1;\n    setPrice2(price2);\n    setDappAMM('0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0');\n    setAppleAMM('0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9');\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: 'body { background-color: rgb(20, 240, 120); opacity: 0.9; }'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left\",\n          children: [\"Total DAPP on Aggregator: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(token1).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 66\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left\",\n          children: [\"Total USD on Aggregator: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(token2).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 65\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-danger\",\n          children: [\"Total DAPP on AppleSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(dappBalance).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 77\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-danger\",\n          children: [\"Total USD on AppleSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(usdBalance).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 76\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-danger\",\n          children: [\"DAPP/USD price on AppleSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(price1).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 81\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-primary\",\n          children: [\"Total DAPP on DappSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(dappBalance1).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 77\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-primary\",\n          children: [\"Total USD on DappSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(usdBalance1).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 76\n          }, this), \" tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"my-4 text-left text-primary\",\n          children: [\"DAPP/USD price on DappSwap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: parseFloat(price2).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 81\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Swap, {\n            price1: price1,\n            price2: price2,\n            chainId: chainId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit\",\n          element: /*#__PURE__*/_jsxDEV(Deposit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw\",\n          element: /*#__PURE__*/_jsxDEV(Withdraw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/charts\",\n          element: /*#__PURE__*/_jsxDEV(Charts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"my-4 text-center \",\n        children: \"Participating Exchanges:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"my-4 text-center p-3 mb-2 bg-danger bg-gradient rounded-5 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"dappswap\",\n          src: dappIcon,\n          width: \"40\",\n          height: \"40\",\n          className: \"align-right mx-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), \"DApp Swap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: dappAMM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"my-4 text-center p-3 mb-2 bg-danger bg-gradient rounded-5 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"appleswap\",\n          src: appleIcon,\n          width: \"40\",\n          height: \"40\",\n          className: \"align-right mx-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), \"Apple Swap: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: appleAMM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xFhnPbRgUjs29xMuhL0RQkYll3c=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useSelector","useDispatch","HashRouter","Routes","Route","Container","ethers","Col","Row","dappIcon","appleIcon","Navigation","Tabs","Swap","Deposit","Withdraw","Charts","AMM_ABI","TOKEN_ABI","config","loadProvider","loadBalances","loadBalances1","loadNetwork","loadAccount","loadTokens","loadAMM","loadApple","App","dappswap","setDappSwap","appleswap","setAppleSwap","usd","setUSD","dapp","setDapp","dappAMM","setDappAMM","appleAMM","setAppleAMM","usdBalance","setUSDBalance","dappBalance","setDappBalance","price1","setPrice1","usdBalance1","setUSDBalance1","dappBalance1","setDappBalance1","price2","setPrice2","isLoading","setIsLoading","token1","state","amm","token2","token3","token4","token5","chainId","provider","account","tokens","contracts","dispatch","loadBlockchainData","window","ethereum","on","location","reload","Contract","address","balanceOf","utils","formatUnits","parseFloat","toFixed"],"sources":["/home/arcturian/aggregator/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport { ethers } from 'ethers'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport dappIcon from '../dapp-swap.png';\nimport appleIcon from '../apple.jpeg';\n\n// Components\nimport Navigation from './Navigation';\nimport Tabs from './Tabs';\nimport Swap from './Swap';\nimport Deposit from './Deposit';\nimport Withdraw from './Withdraw';\n\n// import Deposit from './Deposit';\n// import Withdraw from './Withdraw';\nimport Charts from './Charts';\n\n// ABIs: Import your contract ABIs here\nimport AMM_ABI from '../abis/AMM.json'\nimport TOKEN_ABI from '../abis/Token.json'\n\n// Config: Import your network config here\nimport config from '../config.json';\n\n\nimport {\n  loadProvider,\n  loadBalances,\n  loadBalances1,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadAMM,\n  loadApple\n} from '../store/interactions'\n\nfunction App() {\n\n\n  const [dappswap, setDappSwap] = useState(null)\n  const [appleswap, setAppleSwap] = useState(null)\n  const [usd, setUSD] = useState(null)\n  const [dapp, setDapp] = useState(null)\n\n  const [dappAMM, setDappAMM] = useState(null)\n  const [appleAMM, setAppleAMM] = useState(null)\n\n  const [usdBalance, setUSDBalance] = useState(0)\n  const [dappBalance, setDappBalance] = useState(0)\n  const [price1, setPrice1] = useState(0)\n\n  const [usdBalance1, setUSDBalance1] = useState(0)\n  const [dappBalance1, setDappBalance1] = useState(0)\n  const [price2, setPrice2] = useState(0)\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const token1 = useSelector(state => state.amm.token1)\n  const token2 = useSelector(state => state.amm.token2)\n  const token3 = useSelector(state => state.amm.token3)\n\n  const token4 = useSelector(state => state.amm.token4)\n  const token5 = useSelector(state => state.amm.token5)\n\n  // const tokenA = useSelector(state => state.appleswap.token1)\n  \n  const chainId = useSelector(state => state.provider.chainId)\n  const account = useSelector(state => state.provider.account)\n  const tokens = useSelector(state => state.tokens.contracts)\n\n  const dispatch = useDispatch()\n\n\n  const loadBlockchainData = async () => {\n\n    // Initiate provider\n    const provider = await loadProvider(dispatch)\n\n    // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n    const chainId = await loadNetwork(provider, dispatch)\n\n    // Reload page when network changes\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload()\n    })\n\n    // Fetch current account from Metamask when changed\n    window.ethereum.on('accountsChanged', async () => {\n      await loadAccount(dispatch)\n    })\n\n    // Initiate contracts - Redux\n    await loadTokens(provider, chainId, dispatch)\n    await loadAMM(provider, chainId, dispatch)\n    // await loadApple(provider, chainId, dispatch)\n\n    // Initiate contracts - React\n    const dappswap = new ethers.Contract(config[31337].dappswap.address, AMM_ABI, provider)\n    setDappSwap(dappswap)\n\n    const appleswap = new ethers.Contract(config[31337].appleswap.address, AMM_ABI, provider)\n    setAppleSwap(appleswap)\n\n    // Initiate contracts\n    let usd = new ethers.Contract(config[31337].usd.address, TOKEN_ABI, provider)\n    setUSD(usd)\n\n    let dapp = new ethers.Contract(config[31337].dapp.address, TOKEN_ABI, provider)\n    setDapp(dapp)\n\n    // Retrieve Balances\n\n    let dappBalance = await dapp.balanceOf(appleswap.address)\n    dappBalance = ethers.utils.formatUnits(dappBalance, 18)\n    setDappBalance(dappBalance)\n\n    let usdBalance = await usd.balanceOf(appleswap.address)\n    usdBalance = ethers.utils.formatUnits(usdBalance, 18)\n    setUSDBalance(usdBalance)\n\n    let price1 = usdBalance / dappBalance\n    setPrice1(price1)\n\n    let dappBalance1 = await dapp.balanceOf(dappswap.address)\n    dappBalance1 = ethers.utils.formatUnits(dappBalance1, 18)\n    setDappBalance1(dappBalance1)\n\n    let usdBalance1 = await usd.balanceOf(dappswap.address)\n    usdBalance1 = ethers.utils.formatUnits(usdBalance1, 18)\n    setUSDBalance1(usdBalance1)\n\n    let price2 = usdBalance1 / dappBalance1\n    setPrice2(price2)\n\n    setDappAMM('0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0')\n    setAppleAMM('0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9')\n\n  }\n\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, []);\n\n  return(\n    <Container>\n\n    <style>{'body { background-color: rgb(20, 240, 120); opacity: 0.9; }'}</style>\n\n      <HashRouter>\n\n        <Navigation />\n\n        <hr />\n\n<Col>\n        <h6 className='my-4 text-left'>Total DAPP on Aggregator: <strong>{parseFloat(token1).toFixed(2)}</strong> tokens</h6>\n        <h6 className='my-4 text-left'>Total USD on Aggregator: <strong>{parseFloat(token2).toFixed(2)}</strong> tokens</h6>\n</Col>\n<Col>\n        <h6 className='my-4 text-left text-danger'>Total DAPP on AppleSwap: <strong>{parseFloat(dappBalance).toFixed(2)}</strong> tokens</h6>\n        <h6 className='my-4 text-left text-danger'>Total USD on AppleSwap: <strong>{parseFloat(usdBalance).toFixed(2)}</strong> tokens</h6>\n        <h6 className='my-4 text-left text-danger'>DAPP/USD price on AppleSwap: <strong>{parseFloat(price1).toFixed(2)}</strong></h6>\n</Col>\n<Col>\n        <h6 className='my-4 text-left text-primary'>Total DAPP on DappSwap: <strong>{parseFloat(dappBalance1).toFixed(2)}</strong> tokens</h6>\n        <h6 className='my-4 text-left text-primary'>Total USD on DappSwap: <strong>{parseFloat(usdBalance1).toFixed(2)}</strong> tokens</h6>\n        <h6 className='my-4 text-left text-primary'>DAPP/USD price on DappSwap: <strong>{parseFloat(price2).toFixed(2)}</strong></h6>\n</Col>\n        <Tabs />\n\n        <Routes>\n          <Route exact path=\"/\" element={<Swap price1={price1} price2={price2} chainId={chainId}/>} />\n          <Route path=\"/deposit\" element={<Deposit />} />\n          <Route path=\"/withdraw\" element={<Withdraw />} />\n          <Route path=\"/charts\" element={<Charts />} />\n        </Routes>\n\n        <h3 className='my-4 text-center '>Participating Exchanges:</h3>\n \n        <h6 className='my-4 text-center p-3 mb-2 bg-danger bg-gradient rounded-5 text-white'>       \n\n        <img\n        alt=\"dappswap\"\n        src={dappIcon}\n        width=\"40\"\n        height=\"40\"\n        className=\"align-right mx-3\"\n        />\n\n        DApp Swap: <strong>{dappAMM}</strong></h6> \n\n         \n        <h6 className='my-4 text-center p-3 mb-2 bg-danger bg-gradient rounded-5 text-white'>\n\n        <img\n        alt=\"appleswap\"\n        src={appleIcon}\n        width=\"40\"\n        height=\"40\"\n        className=\"align-right mx-3\"\n        />\n\n        Apple Swap: <strong>{appleAMM}</strong></h6>\n\n      </HashRouter>\n\n    </Container>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}